{"version":3,"sources":["components/index.js","App.js","reportWebVitals.js","index.js"],"names":["WrapperStyled","styled","div","SearchStyled","InputStyled","input","CityInfoStyled","ImageWeaterStyled","img","TemperatureStyled","p","LastInfoStyled","Col","Weather","useState","CityName","setCityName","WeatherStae","setWeatherStae","WeatherIcon","setWeatherIcon","Temperature","setTemperature","Sunrise","setSunrise","Sunset","setSunset","Humidity","setHumidity","WindSpeed","setWindSpeed","justify","span","SearchOutlined","style","fontSize","type","placeholder","onChange","e","fetch","target","value","then","res","a","ok","json","data","name","weather","description","icon","Math","round","main","temp","moment","unix","sys","sunrise","format","sunset","humidity","wind","speed","toFixed","marginBottom","src","alt","flex","className","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.937ea2da.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport moment from 'moment'\r\n\r\nconst WrapperStyled = styled.div`\r\n    background-color: lightblue;\r\n    margin-top: 20px;\r\n    color: white;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n`;\r\n\r\nconst SearchStyled = styled.div`\r\n    border-bottom: 1px solid white;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n    padding-top: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    border-bottom: 1px solid white;\r\n`;\r\n\r\n\r\nconst InputStyled = styled.input`\r\n    width: 100%;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    background: transparent;\r\n    padding-left: 20px;\r\n    &::placeholder {\r\n        color: whitesmoke;\r\n    }\r\n`;\r\n\r\nconst CityInfoStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n    margin-top: 50px;\r\n    border-bottom: 1px solid white;\r\n`;\r\n\r\nconst ImageWeaterStyled = styled.img`\r\n    width: 170px;\r\n    height: 170px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst TemperatureStyled = styled.p`\r\n    font-size: 80px;    \r\n    position: relative;\r\n    &::after {\r\n        content: 'o';\r\n        position: absolute;\r\n        font-size: 30px;\r\n        margin-left: 5px;\r\n    }\r\n`;\r\n\r\nconst LastInfoStyled = styled(Col)`\r\n    display: flex;\r\n    justify-content:center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 20px;   \r\n    .label {\r\n        font-size: 15px;\r\n        font-weight: bold;\r\n    }\r\n    .value {\r\n        font-size: 20px;\r\n    }\r\n`;\r\n\r\nexport default function Weather() {\r\n    const APP_ID = '3287078d62543544f3a15ffe8759dc49';\r\n    const [CityName, setCityName] = useState('Hà nội');\r\n    const [WeatherStae, setWeatherStae] = useState('--');\r\n    const [WeatherIcon, setWeatherIcon] = useState('http://openweathermap.org/img/wn/10d@2x.png');\r\n    const [Temperature, setTemperature] = useState('--');\r\n    \r\n    const [Sunrise, setSunrise] = useState('--');\r\n    const [Sunset, setSunset] = useState('--');\r\n    const [Humidity, setHumidity] = useState('--');\r\n    const [WindSpeed, setWindSpeed] = useState('--');\r\n\r\n    const SearchInput = (e) => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e.target.value}&appid=${APP_ID}&units=metric&lang=vi`)\r\n        .then(async res => {\r\n            if(res.ok) {\r\n                const data = await res.json();\r\n                setCityName(data.name);\r\n                setWeatherStae(data.weather[0].description);\r\n                setWeatherIcon(`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`);\r\n                setTemperature(Math.round(data.main.temp));\r\n                setSunrise(moment.unix(data.sys.sunrise).format('H:mm'));\r\n                setSunset(moment.unix(data.sys.sunset).format('H:mm'));\r\n                setHumidity(data.main.humidity);\r\n                setWindSpeed((data.wind.speed*3.6).toFixed(2));\r\n            };\r\n        })  \r\n    }\r\n\r\n    return (\r\n        <Row justify={'center'}>\r\n            <Col span={8}>\r\n                <WrapperStyled>\r\n                    <SearchStyled>\r\n                        <SearchOutlined style={{ fontSize: '20px' }}/>\r\n                      \r\n                            <InputStyled type='text' placeholder='Nhập thành phố ...' onChange={SearchInput}/>\r\n                    \r\n                    </SearchStyled>\r\n                    <CityInfoStyled>\r\n                        <p style={{ fontSize:'25px', marginBottom: '0' }}>{CityName}</p>\r\n                        <p>{WeatherStae}</p>\r\n                        <ImageWeaterStyled src={WeatherIcon} alt=\"weater-icon\"></ImageWeaterStyled>\r\n                        <TemperatureStyled>{Temperature}</TemperatureStyled>\r\n                    </CityInfoStyled>\r\n                    <div>\r\n                        <Row>\r\n                            <LastInfoStyled flex={1}>\r\n                                <p className='label'>Mt mọc</p>\r\n                                <p className='value'>{Sunrise}</p>\r\n                            </LastInfoStyled>\r\n                            <LastInfoStyled flex={1}>\r\n                                <p className='label'>Mt lặn</p>\r\n                                <p className='value'>{Sunset}</p>\r\n                            </LastInfoStyled>\r\n                        </Row>\r\n                        <Row>\r\n                            <LastInfoStyled flex={1}>\r\n                                <p className='label'>Độ ẩm</p>\r\n                                <p className='value'>{Humidity+'%'}</p>\r\n                            </LastInfoStyled>\r\n                            <LastInfoStyled flex={1}>\r\n                                <p className='label'>Gió</p>\r\n                                <p className='value'>{WindSpeed+ 'km/h'}</p>\r\n                            </LastInfoStyled>\r\n                        </Row>\r\n                    </div>\r\n                </WrapperStyled>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import Weather from \"./components\";\n\nfunction App() {\n  return (\n    <Weather/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}